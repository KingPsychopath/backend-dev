# Return Type = int
# Type of "x" = int

# Define a function named reverse_integer that takes an integer x as input
def reverse_integer(x):
   # Initialize a variable named reverse to 0
   reverse = 0
   # While x is greater than 0
   while x > 0:
       # Get the last digit of x
       last_digit = x % 10
       # Remove the last digit from x
       x //= 10
       # Add the last digit to the reverse variable
       reverse = 10 * reverse + last_digit
       """
       In the line reverse = 10 * reverse + last_digit, 
       we multiply the current value of reverse by 10 before adding the last digit of x. 
       This is because we want to shift the digits of reverse one place to the left to make room for the next digit of x. 
       For example, if reverse is currently 123 and the next digit of x is 4, we want to update reverse to be 1234. 
       Multiplying reverse by 10 shifts the digits one place to the left, so that when we add the next digit of x,
       it will be in the correct place.

       """
   # Return the reversed integer
   return reverse



# Solution 2

def reverse_integer2(x):
   return int(str(x)[::-1])