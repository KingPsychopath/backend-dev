import random
import math
import sys


def prime_factors(n):
    prime_factors = []
    while n % 2 == 0:
        n /= 2
        prime_factors.append(2)
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        while n % i == 0:
            n /= i
            prime_factors.append(i)
    if n > 2:
        prime_factors.append(int(n))
    return prime_factors


# don't touch below this line


def test(length):
    my_bytes = urandom_from_random(length)
    num = int.from_bytes(my_bytes, "little", signed=False)
    print(f"Processing {length * 8} bits. Int value: {num}...")
    primes = prime_factors(num)
    print(f"Prime factors: {primes}")
    print("====================================")


def main():
    random.seed(0)
    for i in range(1, 7):
        test(i)


def urandom_from_random(length):
    if length == 0:
        return b""
    integer = random.getrandbits(length * 8)
    result = integer.to_bytes(length, sys.byteorder)
    return result


main()